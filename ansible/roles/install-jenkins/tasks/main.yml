---
- name: Install Jenkins key
  apt_key:
    url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
    state: present
  notify: update apt cache

- name: Add Jenkins repo
  apt_repository:
    repo: "deb https://pkg.jenkins.io/debian-stable binary/"
    state: present
  notify: update apt cache

- name: update apt cache
  meta: flush_handlers

- name: install Jenkins
  apt:
    name: jenkins
    state: latest
  register: apt_jenkins
  notify: restart jenkins

- name: copy plugin manager .jar
  copy:
    src: jenkins-plugin-manager-2.12.11.jar
    dest: "{{ jenkins_home }}"
    owner: jenkins
    group: jenkins
    
- name: copy plugin list .yml
  copy:
    src: jenkins-plugins.yaml
    dest: "{{ jenkins_home }}"
    force: true
    owner: jenkins
    group: jenkins
  register: plugin_list

- name: copy jenkins.yaml (jcasc)
  copy:
    src: jenkins-casc.yaml
    dest: "{{ jenkins_home }}/jenkins.yaml"
    owner: jenkins
    group: jenkins
    force: true
  notify: restart jenkins

- name: run jenkins plugin manager
  shell: |
    java -jar "{{ jenkins_home }}/jenkins-plugin-manager-2.12.11.jar" \
    --war /usr/share/java/jenkins.war \
    --plugin-download-directory "{{ jenkins_home }}/plugins" \
    --plugin-file "{{ jenkins_home }}/jenkins-plugins.yaml"
  when: apt_jenkins.changed is true or plugin_list.changed is true
  notify: restart jenkins

- name: set plugin dir ownership to jenkins:jenkins
  file:
    path: "{{ jenkins_home }}/plugins"
    state: directory
    owner: jenkins
    group: jenkins
    mode: '0755'
    recurse: true

- name: enable jenkins service
  systemd:
    name: jenkins
    state: started
    enabled: true

- name: check if initial passwd exists
  stat:
    path: "{{ jenkins_home }}/secrets/initialAdminPassword"
  register: p

- name: read initial admin pass
  shell: |
    cat "{{ jenkins_home }}/secrets/initialAdminPassword"
  when: p.stat.exists
  register: adm_passwd

- name: print initial admin passwd
  debug:
    msg: "INITIAL JENKINS ADMIN PASSWD: {{ adm_passwd.stdout }}"
  when: p.stat.exists